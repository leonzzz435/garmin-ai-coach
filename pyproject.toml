[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --cov=. --cov-report=term-missing"
markers = [
    "unit: mark test as a unit test",
    "integration: mark test as an integration test",
    "bot: mark test as a bot-related test",
    "garmin: mark test as a Garmin service test",
    "security: mark test as a security-related test",
]

[project]
name = "tele_garmin"
version = "0.1.0"
description = "Telegram bot for Garmin data analysis with AI-powered insights"
requires-python = ">=3.10"
authors = [
    {name = "Developer"}
]
# Dependencies now managed by Pixi in pixi.toml

[tool.setuptools]
packages = ["bot", "core", "services", "utils"]


[tool.black]
line-length = 100
target-version = ["py310"]
skip-string-normalization = true

[tool.ruff]
line-length = 100
target-version = "py310"
exclude = [
  ".git",
  ".venv",
  "venv",
  ".pixi",
  "notebooks",
  "data",
  "logs",
  "build",
  "dist",
  "__pycache__",
]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "F",  # pyflakes
    "I",  # isort (import sorting)
    "UP", # pyupgrade
    "B",  # bugbear
    "PL", # pylint (subset)
]
ignore = [
    "D",    # pydocstyle - docstrings intentionally minimized
    "ANN",  # typing annotations enforcement
    "E501", # line length - allow longer lines for logs/URLs/strings
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"
